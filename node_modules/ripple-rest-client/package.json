{
  "name": "ripple-rest-client",
  "version": "1.13.0",
  "description": "A Node.js client library for interacting with Ripple REST servers.",
  "main": "./index.js",
  "scripts": {
    "test": "mocha -R spec test/ --timeout=3000"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/stevenzeiler/ripple-rest-client.git"
  },
  "keywords": [
    "ripple",
    "api",
    "http",
    "client"
  ],
  "author": {
    "name": "stevenzeiler"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/stevenzeiler/ripple-rest-client/issues"
  },
  "dependencies": {
    "request": "2.x.x",
    "node-uuid": "^1.4.1",
    "async": "^0.9.0",
    "require-all-to-camel": "^1.0.0",
    "bluebird": "^2.3.4",
    "superagent": "^0.19.1",
    "require-all": "0.0.8"
  },
  "devDependencies": {
    "mocha": "1.16.x",
    "assert": "1.1.x",
    "sinon": ""
  },
  "readme": "## Ripple REST Node.js Client Library\n\n[![Build Status](https://api.travis-ci.org/stevenzeiler/ripple-rest-client.png)](https://api.travis-ci.org/stevenzeiler/ripple-rest-client)\n\nThe Ripple REST Api Server software simplifies interaction with the Ripple payment network. This libraryaims to provide the most simplified service for using the REST api in node.js.\n\n### Installation\n\n    npm install ripple-rest-client\n\n#### Usage\n    \n    var RippleRestClient = require(\"ripple-rest-client\").Client;\n    \n    var client = new RippleRestClient({\n      api: 'http://localhost:5990',\n      account: 'rw6qnMHxqg1m3xki7Y89H45BjU7LnAYyoL',\n      secret: 'shgL7M1kbgrBkkkQwwRGHBmbLamxe' \n    });\n\nThere are two primary payemnt functions, sending payments and listening to incoming payments.\n\nSending a Payment:\n\n    client.sendPayment({\n      recipient: 'rfZqa3caUggfV2p1K19HHMnQbJcAposMNc',\n      amount: 10,\n      currency: 'XAG',\n      issuer: 'rNipPmQdFMm8SwtsqjjiupRHo8KBwQrDbk' \n    }, function(err, response){\n      console.log('payment submitted');\n      console.log(response);\n    });\n\n#### Proposed API actions\n\nhttp://dev.ripple.com/rest-api-tool.html#get-payment-history\n\n    const ripple = new RippleAPI({\n      adapter: 'rest',\n      url: 'http://127.0.0.1:5990'\n    })\n\nAdapters are planned for `rest`, `rpc`, and `websocket`.\n\nThe following API methods return an instance of Promise\n\nGenerate Account\n\n    ripple.generateAccount()\n\nGet Account Balances\n\n    ripple.getAccountBalances({\n      account: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk'\n    })\n\nGet Account Settings\n\n    ripple.getAccountSettings({\n      account: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk'\n    })\n\nUpdate Account Settings\n\n    ripple.updateAccountSettings({\n      account: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk'\n      require_destination_tag: false,\n      require_authorization: false,\n      disallow_xrp: true,\n      disable_master: false,\n      email_hash: \"98b4375e1d753e5b91627516f6d70977\"\n      secret: 'sssssssssssssssssssssss'\n    }) \n\nPrepare Payment\n\n    ripple.preparePayment({\n      source_account: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk',\n      source_amount: {\n        \"value\": \"1\",\n        \"currency\": \"USD\"\n      },\n      destination_account: 'rf1BiGeXwwQoi8Z2ueFYTEXSwuJYfV2Jpn',\n      destination_amount: {\n        value: \"1\",\n        currency: \"USD\",\n        issuer: \"rf1BiGeXwwQoi8Z2ueFYTEXSwuJYfV2Jpn\"\n      },\n      invoice_id: 1234\n    })\n\nSubmit Payment\n\n    ripple.submitPayment({\n      source_account: \"rf1BiGeXwwQoi8Z2ueFYTEXSwuJYfV2Jpn\",\n      source_amount: {\n        \"value\": \"1\",\n        \"currency\": \"USD\"\n      },\n      destination_account: \"ra5nK24KXen9AHvsdFTKHSANinZseWnPcX\",\n      destination_tag: 567,\n      destination_amount: {\n        value: \"1\",\n        currency: \"USD\",\n        issuer: \"rf1BiGeXwwQoi8Z2ueFYTEXSwuJYfV2Jpn\"\n      },\n      invoice_id: 1234,\n      paths: [],\n      secret: \"sssssssssssssssssssssssssssss\",\n    })\n\nConfirm Payment\n\n    ripple.confirmPayment({\n      account: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk',\n      hash: 'A7C3B03663C205C84C7A91730A3E7874A88969B50D80471D8E62BFC04D2EA07A'\n    }) \n\nGet Payment History\n\n    ripple.getPaymentHistory({\n      account: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk',\n      direction: 'incoming'\n    })\n\nGet Trustlines\n\n    ripple.getTrustlines({\n      account: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk',\n      counterparty: 'rMwjYedjc7qqtKYVLiAccJSmCwih4LnE2q'\n      currency: 'USD'\n    })\n\nGrant Trustline\n\n    ripple.grantTrustline({\n      limit: 110,\n      currency: \"USD\",\n      counterparty: \"rMwjYedjc7qqtKYVLiAccJSmCwih4LnE2q\",\n      allows_rippling: false,\n      secret: 'sssssssssssssssssssssss'\n    })\n\nCheck Notifications\n\n    ripple.checkNotifications({\n      account: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk',\n      hash: 'A7C3B03663C205C84C7A91730A3E7874A88969B50D80471D8E62BFC04D2EA07A'\n    })\n\nRetrive Ripple Transaction\n\n    ripple.retrieveRippleTransaction({\n      hash: 'A7C3B03663C205C84C7A91730A3E7874A88969B50D80471D8E62BFC04D2EA07A'\n    })\n\nGenerate UUID\n\n    ripple.generateUUID()\n\n",
  "readmeFilename": "README.md",
  "gitHead": "ac582c35178cfad1ea1c0142beff8878448ba34d",
  "homepage": "https://github.com/stevenzeiler/ripple-rest-client",
  "_id": "ripple-rest-client@1.13.0",
  "_shasum": "160636a501740014d35427a00a74075d557a0411",
  "_from": "ripple-rest-client@^1.13.0"
}
